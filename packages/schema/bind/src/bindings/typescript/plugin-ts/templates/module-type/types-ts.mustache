/// NOTE: This is an auto-generated file.
///       All modifications will be overwritten.

// @ts-ignore
import * as Types from "./";

// @ts-ignore
import {
  Client,
  InvokeApiResult
} from "@web3api/core-js";

export type UInt = number;
export type UInt8 = number;
export type UInt16 = number;
export type UInt32 = number;
export type Int = number;
export type Int8 = number;
export type Int16 = number;
export type Int32 = number;
export type Bytes = Uint8Array;
export type BigInt = string;
export type BigNumber = string;
export type Json = string;
export type String = string;
export type Boolean = boolean;

/// Envs START ///
{{#envTypes}}
{{#query}}
{{#client}}
export interface {{type}} extends Record<string, unknown> {
  {{#properties}}
  {{name}}{{^required}}?{{/required}}: {{#toTypescript}}{{toGraphQLType}}{{/toTypescript}};
  {{/properties}}
}
{{/client}}
{{#sanitized}}
export interface {{type}} extends Record<string, unknown> {
  {{#properties}}
  {{name}}{{^required}}?{{/required}}: {{#toTypescript}}{{toGraphQLType}}{{/toTypescript}};
  {{/properties}}
}
{{/sanitized}}
{{/query}}
{{#mutation}}
{{#client}}
export interface {{type}} extends Record<string, unknown> {
  {{#properties}}
  {{name}}{{^required}}?{{/required}}: {{#toTypescript}}{{toGraphQLType}}{{/toTypescript}};
  {{/properties}}
}
{{/client}}
{{#sanitized}}
export interface {{type}} extends Record<string, unknown> {
  {{#properties}}
  {{name}}{{^required}}?{{/required}}: {{#toTypescript}}{{toGraphQLType}}{{/toTypescript}};
  {{/properties}}
}
{{/sanitized}}
{{/mutation}}
{{/envTypes}}
/// Envs END ///

/// Objects START ///
{{#objectTypes}}
export interface {{type}} {
  {{#properties}}
  {{name}}{{^required}}?{{/required}}: {{#toTypescript}}{{toGraphQLType}}{{/toTypescript}};
  {{/properties}}
}

{{/objectTypes}}
/// Objects END ///

/// Enums START ///
{{#enumTypes}}
export enum {{type}}Enum {
  {{#constants}}
  {{.}},
  {{/constants}}
}

export type {{type}}String =
  {{#constants}}
  | "{{.}}"
  {{/constants}}

export type {{type}} = {{type}}Enum | {{type}}String;

{{/enumTypes}}
/// Enums END ///

/// Unions START ///
{{#unionTypes}}

export type {{type}} =
{{#memberTypes}}
  | {{type}}
{{/memberTypes}}

{{/unionTypes}}
/// Unions END ///

/// Imported Objects START ///
{{#importedObjectTypes}}
/* URI: "{{uri}}" */
export interface {{type}} {
  {{#properties}}
  {{name}}{{^required}}?{{/required}}: {{#toTypescript}}{{toGraphQLType}}{{/toTypescript}};
  {{/properties}}
}

{{/importedObjectTypes}}
{{#importedEnumTypes}}
/* URI: "{{uri}}" */
export enum {{type}}Enum {
  {{#constants}}
  {{.}},
  {{/constants}}
}

export type {{type}}String =
  {{#constants}}
  | "{{.}}"
  {{/constants}}

export type {{type}} = {{type}}Enum | {{type}}String;
{{/importedEnumTypes}}

{{#importedUnionTypes}}

/* URI: "{{uri}}" */
export type {{type}} =
{{#memberTypes}}
  | {{type}}
{{/memberTypes}}
{{/importedUnionTypes}}
/// Imported Objects END ///

/// Imported Queries START ///

{{#importedModuleTypes}}
{{#methods}}
/* URI: "{{parent.uri}}" */
interface {{parent.type}}_Input_{{name}} extends Record<string, unknown> {
  {{#arguments}}
  {{name}}{{^required}}?{{/required}}: {{#toTypescript}}{{toGraphQLType}}{{/toTypescript}};
  {{/arguments}}
}

{{/methods}}
/* URI: "{{uri}}" */
{{^isInterface}}
export const {{type}} = {
  {{#methods}}
  {{name}}: async (
    input: {{parent.type}}_Input_{{name}},
    client: Client
  ): Promise<InvokeApiResult<{{#return}}{{#toTypescript}}{{toGraphQLType}}{{/toTypescript}}{{/return}}>> => {
    return client.invoke<{{#return}}{{#toTypescript}}{{toGraphQLType}}{{/toTypescript}}{{/return}}>({
      uri: "{{parent.uri}}",
      module: "{{type}}",
      method: "{{name}}",
      input
    });
  }{{^last}},{{/last}}
  {{^last}}

  {{/last}}
  {{/methods}}
}

{{/isInterface}}
{{#isInterface}}
export class {{type}} {
  public static interfaceUri: string = "{{uri}}";

  constructor(public uri: string) {
  }

  {{#methods}}
  public async {{name}} (
    input: {{parent.type}}_Input_{{name}},
    client: Client
  ): Promise<InvokeApiResult<{{#return}}{{#toTypescript}}{{toGraphQLType}}{{/toTypescript}}{{/return}}>> {
    return client.invoke<{{#return}}{{#toTypescript}}{{toGraphQLType}}{{/toTypescript}}{{/return}}>({
      uri: this.uri,
      module: "{{type}}",
      method: "{{name}}",
      input
    });
  }
  {{^last}}

  {{/last}}
  {{/methods}}
}

{{/isInterface}}
{{/importedModuleTypes}}
/// Imported Queries END ///
{{#interfaceTypes.length}}
{{#interfaceTypes}}

export class {{namespace}} {
  static uri: string = "{{uri}}";

  {{#capabilities}}
  {{#getImplementations}}
  {{#enabled}}
  public static getImplementations(client: Client): string[] {
    return client.getImplementations(this.uri, {});
  }
  {{/enabled}}
  {{/getImplementations}}
  {{/capabilities}}
}
{{/interfaceTypes}}
{{/interfaceTypes.length}}
